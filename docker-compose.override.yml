version: "3"

services:

  traefik:
    ports:
      - ${TRAEFIK_PORT}:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`traefik.mage2playground.docker`, `www.traefik.mage2playground.docker`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik/traefik.yml:/traefik.yml:ro
    restart: on-failure

  varnish:
    command: ${VARNISH_COMMAND}
    volumes:
      - ./config/varnish/default.vcl:/etc/varnish/default.vcl:ro
      - varnish-data:/var/lib/varnish
    restart: on-failure

  nginx:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.routers.nginx.rule=Host(`mage2playground.docker`, `www.mage2playground.docker`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    volumes:
      - ${MAGE2_PATH}:${MAGE2_ROOT}:ro
      - ./config/nginx/mage2playground.nginx:/etc/nginx/conf.d/default.conf:ro
    restart: on-failure

  db:
    ports:
      - ${DB_PORT}:3306
    env_file:
      - ./config/db/mage2db.env
    volumes:
      - mariadb-data:/var/lib/mysql
    restart: on-failure

  rediscache:
    command: --appendonly yes
    volumes:
      - rediscache-data:/data
    restart: on-failure

  redissession:
    command: --appendonly yes
    volumes:
      - redissession-data:/data
    restart: on-failure

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VER}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.elasticsearch.entrypoints=web"
      - "traefik.http.routers.elasticsearch.rule=Host(`elastic.mage2playground.docker`, `www.elastic.mage2playground.docker`)"
      - "traefik.http.services.elasticsearch.loadbalancer.server.port=9200"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elastic-data:/usr/share/elasticsearch/data
    restart: on-failure

  mailhog:
    image: mailhog/mailhog:${MAILHOG_VER}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.entrypoints=web"
      - "traefik.http.routers.mailhog.rule=Host(`mailhog.mage2playground.docker`, `www.mailhog.mage2playground.docker`)"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"
    restart: on-failure

  mage2:
    build:
      context: ./docker/mage2
      args:
        - MAGE2_UID=${MAGE2_UID}
        - MAGE2_GID=${MAGE2_GID}
        - PHP_SERVER_VER=${PHP_SERVER_VER}
        - PHP_REDIS_VER=${PHP_REDIS_VER}
        - PHP_XDEBUG_VER=${PHP_XDEBUG_VER}
    environment:
      MAGE2_UID: ${MAGE2_UID}
      MAGE2_GID: ${MAGE2_GID}
    volumes:
      - ${MAGE2_PATH}:${MAGE2_ROOT}

  cli:
    build:
      context: ./docker/cli
      args:
        - MAGE2_UID=${MAGE2_UID}
        - MAGE2_GID=${MAGE2_GID}
        - COMPOSER_VER=${COMPOSER_VER}
        - PHP_CLI_VER=${PHP_CLI_VER}
        - PHP_REDIS_VER=${PHP_REDIS_VER}
    env_file:
      - ./config/cli/mage2cli.env
    environment:
      MAGE2_UID: ${MAGE2_UID}
      MAGE2_GID: ${MAGE2_GID}
    volumes:
      - ${MAGE2_PATH}:${MAGE2_ROOT}

  cron:
    build:
      context: ./docker/cron
      args:
        - MAGE2CLI_IMAGE=${MAGE2CLI_IMAGE}
    environment:
      MAGE2_UID: ${MAGE2_UID}
      MAGE2_GID: ${MAGE2_GID}
    volumes:
      - ${MAGE2_PATH}:${MAGE2_ROOT}
    restart: on-failure

volumes:
  varnish-data:
  rediscache-data:
  redissession-data:
  elastic-data:
  mariadb-data:
    external: true
